/*! outsider 2017-05-30 */
angular.module("ui.bootstrap.datetimepicker",["ui.bootstrap.dateparser","ui.bootstrap.position"]).constant("uiDatetimePickerConfig",{dateFormat:"yyyy-MM-dd HH:mm",defaultTime:"00:00:00",html5Types:{date:"yyyy-MM-dd","datetime-local":"yyyy-MM-ddTHH:mm:ss.sss",month:"yyyy-MM"},initialPicker:"date",reOpenDefault:!1,enableDate:!0,enableTime:!0,buttonBar:{show:!0,now:{show:!0,text:"Now"},today:{show:!0,text:"Today"},clear:{show:!0,text:"Clear"},date:{show:!0,text:"Date"},time:{show:!0,text:"Time"},close:{show:!0,text:"Close"}},closeOnDateSelection:!0,closeOnTimeNow:!0,appendToBody:!1,altInputFormats:[],ngModelOptions:{},saveAs:!1,readAs:!1}).controller("DateTimePickerController",["$scope","$element","$attrs","$compile","$parse","$document","$timeout","$uibPosition","dateFilter","uibDateParser","uiDatetimePickerConfig","$rootScope",function($scope,$element,$attrs,$compile,$parse,$document,$timeout,$uibPosition,dateFilter,uibDateParser,uiDatetimePickerConfig,$rootScope){function documentClickBind(evt){var popup=$popup[0],dpContainsTarget=$element[0].contains(evt.target),popupContainsTarget=void 0!==popup.contains&&popup.contains(evt.target);!$scope.isOpen||dpContainsTarget||popupContainsTarget||$scope.$apply(function(){$scope.close(!1)})}function inputKeydownBind(evt){27===evt.which&&$scope.isOpen?(evt.preventDefault(),evt.stopPropagation(),$scope.$apply(function(){$scope.close(!1)}),$element[0].focus()):40!==evt.which||$scope.isOpen||(evt.preventDefault(),evt.stopPropagation(),$scope.$apply(function(){$scope.isOpen=!0}))}function cameltoDash(string){return string.replace(/([A-Z])/g,function($1){return"-"+$1.toLowerCase()})}function parseDateString(viewValue){var date=uibDateParser.parse(viewValue,dateFormat,$scope.date);if(isNaN(date))for(var i=0;i<altInputFormats.length;i++)if(date=uibDateParser.parse(viewValue,altInputFormats[i],$scope.date),!isNaN(date))return date;return date}function parseDate(viewValue){if(angular.isNumber(viewValue)&&!isNaN(viewValue)&&(viewValue=new Date(viewValue)),!viewValue)return null;if(angular.isDate(viewValue)&&!isNaN(viewValue))return viewValue;if(angular.isString(viewValue)){var date=parseDateString(viewValue);if(!isNaN(date))return uibDateParser.toTimezone(date,ngModelOptions.timezone)}else;}function validateMinMax(value){return!($scope.datepickerOptions.minDate&&value<$scope.datepickerOptions.minDate)&&!($scope.datepickerOptions.maxDate&&value>$scope.datepickerOptions.maxDate)}function validator(modelValue,viewValue){var value=modelValue||viewValue;return!($attrs.ngRequired||$attrs.required||value)||(angular.isNumber(value)&&(value=new Date(value)),!value||(angular.isDate(value)&&!isNaN(value)?validateMinMax(value):angular.isDate(new Date(value))&&!isNaN(new Date(value).valueOf())?validateMinMax(new Date(value)):!!angular.isString(value)&&(!isNaN(parseDateString(viewValue))&&validateMinMax(parseDateString(viewValue)))))}var ngModel,ngModelOptions,$popup,dateFormat=uiDatetimePickerConfig.dateFormat,cache={},watchListeners=[],closeOnDateSelection=angular.isDefined($attrs.closeOnDateSelection)?$scope.$parent.$eval($attrs.closeOnDateSelection):uiDatetimePickerConfig.closeOnDateSelection,closeOnTimeNow=angular.isDefined($attrs.closeOnTimeNow)?$scope.$parent.$eval($attrs.closeOnTimeNow):uiDatetimePickerConfig.closeOnTimeNow,appendToBody=angular.isDefined($attrs.datepickerAppendToBody)?$scope.$parent.$eval($attrs.datepickerAppendToBody):uiDatetimePickerConfig.appendToBody,altInputFormats=angular.isDefined($attrs.altInputFormats)?$scope.$parent.$eval($attrs.altInputFormats):uiDatetimePickerConfig.altInputFormats,saveAs=angular.isDefined($attrs.saveAs)?$scope.$parent.$eval($attrs.saveAs)||$attrs.saveAs:uiDatetimePickerConfig.saveAs,readAs=angular.isDefined($attrs.readAs)?$scope.$parent.$eval($attrs.readAs):uiDatetimePickerConfig.readAs;this.init=function(_ngModel){function readAsFormatter(value){if(ngModel.$isEmpty(value))return value;var d=new Date(value);return angular.isDate(d)&&!isNaN(d)?d:value}function saveAsParser(value){return!value||angular.isString(value)||!angular.isDate(value)||isNaN(value)?value:"ISO"===saveAs?value.toISOString():"json"===saveAs?value.toJSON():"number"===saveAs?value.valueOf():isHtml5DateInput?uibDateParser.fromTimezone(value,ngModelOptions.timezone).toLocaleString():(dateFormat=dateFormat.replace(/M!/,"MM").replace(/d!/,"dd"),uibDateParser.filter(uibDateParser.fromTimezone(value,ngModelOptions.timezone),dateFormat))}if(ngModel=_ngModel,ngModelOptions=ngModel.$options||uiDatetimePickerConfig.ngModelOptions,$scope.buttonBar=angular.isDefined($attrs.buttonBar)?$scope.$parent.$eval($attrs.buttonBar):uiDatetimePickerConfig.buttonBar,$scope.enableDate=angular.isDefined($scope.enableDate)?$scope.enableDate:uiDatetimePickerConfig.enableDate,$scope.enableTime=angular.isDefined($scope.enableTime)?$scope.enableTime:uiDatetimePickerConfig.enableTime,$scope.initialPicker=angular.isDefined($attrs.initialPicker)?$attrs.initialPicker:$scope.enableDate?uiDatetimePickerConfig.initialPicker:"time",$scope.reOpenDefault=angular.isDefined($attrs.reOpenDefault)?$attrs.reOpenDefault:uiDatetimePickerConfig.reOpenDefault,"date"==$scope.initialPicker&&!$scope.enableDate)throw new Error("datetimePicker can't have initialPicker set to date and have enableDate set to false.");$scope.showPicker=$scope.enableDate?$scope.initialPicker:"time";var isHtml5DateInput=!1;if(uiDatetimePickerConfig.html5Types[$attrs.type]?(dateFormat=uiDatetimePickerConfig.html5Types[$attrs.type],isHtml5DateInput=!0):(dateFormat=$attrs.datetimePicker||uiDatetimePickerConfig.dateFormat,$attrs.$observe("datetimePicker",function(value){var newDateFormat=value||uiDatetimePickerConfig.dateFormat;if(newDateFormat!==dateFormat&&(dateFormat=newDateFormat,ngModel.$modelValue=null,!dateFormat))throw new Error("datetimePicker must have a date format specified.")})),!dateFormat)throw new Error("datetimePicker must have a date format specified.");var popupEl=angular.element('<div date-picker-wrap><div uib-datepicker></div></div><div time-picker-wrap><div uib-timepicker style="margin:0 auto"></div></div>');ngModelOptions?(timezone=ngModelOptions.timezone,$scope.ngModelOptions=angular.copy(ngModelOptions),$scope.ngModelOptions.timezone=null,$scope.ngModelOptions.updateOnDefault===!0&&($scope.ngModelOptions.updateOn=$scope.ngModelOptions.updateOn?$scope.ngModelOptions.updateOn+" default":"default"),popupEl.attr("ng-model-options","ngModelOptions")):timezone=null,popupEl.attr({"ng-model":"date","ng-change":"dateSelection(date)"});var datepickerEl=angular.element(popupEl.children()[0]);$scope.datepickerOptions||($scope.datepickerOptions={}),isHtml5DateInput&&"month"===$attrs.type&&($scope.datepickerOptions.datepickerMode="month",$scope.datepickerOptions.minMode="month"),datepickerEl.attr("datepicker-options","datepickerOptions"),angular.isDefined($scope.datepickerOptions.datepickerMode)||($scope.datepickerOptions.datepickerMode="day");var timepickerEl=angular.element(popupEl.children()[1]);$scope.timepickerOptions||($scope.timepickerOptions={});for(var key in $scope.timepickerOptions)timepickerEl.attr(cameltoDash(key),"timepickerOptions."+key);angular.forEach(["minDate","maxDate","initDate"],function(key){$scope.datepickerOptions[key]&&("minDate"==key?timepickerEl.attr("min","datepickerOptions.minDate"):"maxDate"==key&&timepickerEl.attr("max","datepickerOptions.maxDate"))}),isHtml5DateInput?ngModel.$formatters.push(function(value){return $scope.date=uibDateParser.fromTimezone(value,ngModelOptions.timezone),value}):(ngModel.$$parserName="datetime",ngModel.$validators.datetime=validator,ngModel.$parsers.unshift(parseDate),ngModel.$formatters.push(function(value){return ngModel.$isEmpty(value)?($scope.date=value,value):($scope.date=uibDateParser.fromTimezone(value,ngModelOptions.timezone),dateFormat=dateFormat.replace(/M!/,"MM").replace(/d!/,"dd"),uibDateParser.filter($scope.date,dateFormat))})),saveAs&&(angular.isFunction(saveAs)?ngModel.$parsers.push(saveAs):ngModel.$parsers.push(saveAsParser),angular.isFunction(readAs)?ngModel.$formatters.push(readAs):ngModel.$formatters.push(readAsFormatter)),ngModel.$viewChangeListeners.push(function(){$scope.date=parseDateString(ngModel.$viewValue)}),$element.bind("keydown",inputKeydownBind),$popup=$compile(popupEl)($scope),popupEl.remove(),appendToBody?$document.find("body").append($popup):$element.after($popup)},$scope.getText=function(key){return $scope.buttonBar[key].text||uiDatetimePickerConfig.buttonBar[key].text},$scope.keydown=function(evt){27===evt.which&&($scope.close(!1),$element[0].focus())},$scope.doShow=function(key){return angular.isDefined($scope.buttonBar[key].show)?$scope.buttonBar[key].show:uiDatetimePickerConfig.buttonBar[key].show},$scope.dateSelection=function(dt,opt){if($scope.enableTime&&"time"===$scope.showPicker&&(dt||null!=dt)&&(angular.isDefined($scope.date)&&null!=$scope.date||($scope.date=new Date),dt&&null!=dt)){var date=new Date($scope.date);date.setHours(dt.getHours()),date.setMinutes(dt.getMinutes()),date.setSeconds(dt.getSeconds()),date.setMilliseconds(dt.getMilliseconds()),dt=date}if(angular.isDefined(dt)){if(!$scope.date){var defaultTime=angular.isDefined($attrs.defaultTime)?$attrs.defaultTime:uiDatetimePickerConfig.defaultTime,t=new Date("2001-01-01 "+defaultTime);isNaN(t)||null==dt||(dt.setHours(t.getHours()),dt.setMinutes(t.getMinutes()),dt.setSeconds(t.getSeconds()),dt.setMilliseconds(t.getMilliseconds()))}$scope.date=dt}var date=$scope.date?dateFilter($scope.date,dateFormat):null;$element.val(date),ngModel.$setViewValue(date),closeOnDateSelection&&("time"!=$scope.showPicker&&null!=date?$scope.enableTime?$scope.open("time"):$scope.close(!1):closeOnTimeNow&&"time"===$scope.showPicker&&null!=date&&"now"===opt&&$scope.close(!1))},$scope.$watch("isOpen",function(value){if($scope.dropdownStyle={display:value?"block":"none"},value){cache.openDate=$scope.date;var position=appendToBody?$uibPosition.offset($element):$uibPosition.position($element);appendToBody?$scope.dropdownStyle.top=position.top+$element.prop("offsetHeight")+"px":$scope.dropdownStyle.top=void 0,$scope.dropdownStyle.left=position.left+"px",$timeout(function(){$scope.$broadcast("uib:datepicker.focus"),$document.bind("click",documentClickBind)},0,!1),$scope.open($scope.showPicker)}else $document.unbind("click",documentClickBind)}),$scope.isDisabled=function(date){"today"!==date&&"now"!==date||(date=uibDateParser.fromTimezone(new Date,timezone));var dates={};return angular.forEach(["minDate","maxDate"],function(key){$scope.datepickerOptions[key]?angular.isDate($scope.datepickerOptions[key])?dates[key]=uibDateParser.fromTimezone(new Date($scope.datepickerOptions[key]),timezone):dates[key]=new Date(dateFilter($scope.datepickerOptions[key],"medium")):dates[key]=null}),$scope.datepickerOptions&&dates.minDate&&$scope.compare(date,dates.minDate)<0||dates.maxDate&&$scope.compare(date,dates.maxDate)>0},$scope.compare=function(date1,date2){return new Date(date1.getFullYear(),date1.getMonth(),date1.getDate())-new Date(date2.getFullYear(),date2.getMonth(),date2.getDate())},$scope.select=function(opt,evt){angular.isDefined(evt)&&(evt.preventDefault(),evt.stopPropagation());var date=null;if("today"===opt||"now"==opt){var now=new Date;angular.isDate($scope.date)?(date=new Date($scope.date),date.setFullYear(now.getFullYear(),now.getMonth(),now.getDate()),date.setHours(now.getHours(),now.getMinutes(),now.getSeconds(),now.getMilliseconds())):date=now}$scope.dateSelection(date,opt)},$scope.open=function(picker,evt){angular.isDefined(evt)&&(evt.preventDefault(),evt.stopPropagation()),$timeout(function(){$scope.showPicker=picker},0),"time"==picker&&$timeout(function(){$scope.date=parseDateString(ngModel.$viewValue)},50)},$scope.close=function(closePressed,evt){angular.isDefined(evt)&&(evt.preventDefault(),evt.stopPropagation()),$scope.isOpen=!1,$scope.enableDate&&$scope.enableTime&&($scope.showPicker=$scope.reOpenDefault===!1?"date":$scope.reOpenDefault),angular.isDefined(closePressed)?$scope.whenClosed({args:{closePressed:closePressed,openDate:cache.openDate||null,closeDate:$scope.date}}):$element[0].focus()},$scope.$on("$destroy",function(){$scope.isOpen===!0&&($rootScope.$$phase||$scope.$apply(function(){$scope.close()})),watchListeners.forEach(function(a){a()}),$popup.remove(),$element.unbind("keydown",inputKeydownBind),$document.unbind("click",documentClickBind)})}]).directive("datetimePicker",function(){return{restrict:"A",require:["ngModel","datetimePicker"],controller:"DateTimePickerController",scope:{isOpen:"=?",datepickerOptions:"=?",timepickerOptions:"=?",enableDate:"=?",enableTime:"=?",initialPicker:"=?",reOpenDefault:"=?",whenClosed:"&"},link:function(scope,element,attrs,ctrls){var ngModel=ctrls[0],ctrl=ctrls[1];ctrl.init(ngModel)}}}).directive("datePickerWrap",function(){return{restrict:"EA",replace:!0,transclude:!0,templateUrl:"views/partials/date-picker.html"}}).directive("timePickerWrap",function(){return{restrict:"EA",replace:!0,transclude:!0,templateUrl:"views/partials/time-picker.html"}}),angular.module("ui.bootstrap.datetimepicker").run(["$templateCache",function($templateCache){"use strict";$templateCache.put("views/partials/date-picker.html",'<ul class="dropdown-menu dropdown-menu-left datetime-picker-dropdown" ng-if="isOpen && showPicker == \'date\'" ng-style=dropdownStyle style=left:inherit ng-keydown=keydown($event) ng-click="$event.preventDefault(); $event.stopPropagation()"><li style="padding:0 5px 5px 5px" class=date-picker-menu><div ng-transclude></div></li><li style=padding:5px ng-if=buttonBar.show><span class="btn-group pull-left" style=margin-right:10px ng-if="doShow(\'today\') || doShow(\'clear\')"><button type=button class="btn btn-sm btn-info" ng-if="doShow(\'today\')" ng-click="select(\'today\', $event)" ng-disabled="isDisabled(\'today\')">{{ getText(\'today\') }}</button> <button type=button class="btn btn-sm btn-danger" ng-if="doShow(\'clear\')" ng-click="select(\'clear\', $event)">{{ getText(\'clear\') }}</button></span> <span class="btn-group pull-right" ng-if="(doShow(\'time\') && enableTime) || doShow(\'close\')"><button type=button class="btn btn-sm btn-default" ng-if="doShow(\'time\') && enableTime" ng-click="open(\'time\', $event)">{{ getText(\'time\')}}</button> <button type=button class="btn btn-sm btn-success" ng-if="doShow(\'close\')" ng-click="close(true, $event)">{{ getText(\'close\') }}</button></span> <span class=clearfix></span></li></ul>'),$templateCache.put("views/partials/time-picker.html",'<ul class="dropdown-menu dropdown-menu-left datetime-picker-dropdown" ng-if="isOpen && showPicker == \'time\'" ng-style=dropdownStyle style=left:inherit ng-keydown=keydown($event) ng-click="$event.preventDefault(); $event.stopPropagation()"><li style="padding:0 5px 5px 5px" class=time-picker-menu><div ng-transclude></div></li><li style=padding:5px ng-if=buttonBar.show><span class="btn-group pull-left" style=margin-right:10px ng-if="doShow(\'now\') || doShow(\'clear\')"><button type=button class="btn btn-sm btn-info" ng-if="doShow(\'now\')" ng-click="select(\'now\', $event)" ng-disabled="isDisabled(\'now\')">{{ getText(\'now\') }}</button> <button type=button class="btn btn-sm btn-danger" ng-if="doShow(\'clear\')" ng-click="select(\'clear\', $event)">{{ getText(\'clear\') }}</button></span> <span class="btn-group pull-right" ng-if="(doShow(\'date\') && enableDate) || doShow(\'close\')"><button type=button class="btn btn-sm btn-default" ng-if="doShow(\'date\') && enableDate" ng-click="open(\'date\', $event)">{{ getText(\'date\')}}</button> <button type=button class="btn btn-sm btn-success" ng-if="doShow(\'close\')" ng-click="close(true, $event)">{{ getText(\'close\') }}</button></span> <span class=clearfix></span></li></ul>')}]);